# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build & Deploy Discord Bot

on:
    push:
        branches:
            - master
    workflow_dispatch:

permissions:
    contents: read
    packages: write

jobs:
    build-push-deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - name: Build Docker image
              run: |
                  SHORT_SHA=${GITHUB_SHA::8}
                  IMAGE=ghcr.io/${{ github.repository_owner }}/praccreminder:sha-${SHORT_SHA}
                  echo "Building Docker image $IMAGE"
                  docker build -t $IMAGE .

            - name: Log in to GHCR
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Push image to GHCR
              run: |
                  SHORT_SHA=${GITHUB_SHA::8}
                  IMAGE=ghcr.io/${{ github.repository_owner }}/praccreminder:sha-${SHORT_SHA}
                  echo "Pushing Docker image $IMAGE"
                  docker push $IMAGE

                  # Also tag as latest
                  docker tag $IMAGE ghcr.io/${{ github.repository_owner }}/praccreminder:latest
                  docker push ghcr.io/${{ github.repository_owner }}/praccreminder:latest

            - name: Deploy to VPS (update compose & restart bot)
              uses: appleboy/ssh-action@v0.1.7
              with:
                  host: ${{ secrets.DEPLOY_HOST }}
                  username: ${{ secrets.DEPLOY_USER }}
                  key: ${{ secrets.DEPLOY_SSH_KEY }}
                  envs: GITHUB_SHA_REMOTE
                  script: |
                      set -e
                      SHORT_SHA="${GITHUB_SHA_REMOTE:0:8}"
                      IMAGE="ghcr.io/${{ github.repository_owner }}/praccreminder:sha-${SHORT_SHA}"
                      COMPOSE_FILE="/srv/pracc-reminder/docker-compose.yml"

                      echo "Updating docker-compose image for bot -> ${IMAGE}"
                      sed -i.bak -E "s|(image:[[:space:]]*ghcr.io/${{ github.repository_owner }}/praccreminder:)[^[:space:]]+|\1sha-${SHORT_SHA}|g" "$COMPOSE_FILE"

                      cd /srv/pracc-reminder

                      echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

                      docker compose pull bot || true
                      docker compose up -d --no-deps --build bot || docker compose up -d bot

                      docker image prune -f
              env:
                  GITHUB_SHA_REMOTE: ${{ github.sha }}
